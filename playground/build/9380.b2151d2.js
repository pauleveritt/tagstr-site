"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[9380,7835],{25840:(e,t,r)=>{r.r(t),r.d(t,{IServiceWorkerManager:()=>n,ServiceWorkerManager:()=>h,WORKER_NAME:()=>o});var i=r(5406);const s=r.p+"service-worker.js",n=new i.Token("@jupyterlite/server:IServiceWorkerManager"),o=`${s}`.split("/").slice(-1)[0];var a=r(87776),c=r(93697),g=r(2536);const l=a.PageConfig.getOption("appVersion");class h{constructor(e){var t;this._onBroadcastMessage=async e=>{const{data:t,browsingContextId:r}=e.data;if(r!==this._browsingContextId)return;const i=await this._driveContentsProcessor.processDriveRequest(t);this._broadcastChannel.postMessage({response:i,browsingContextId:this._browsingContextId})},this._registration=null,this._registrationChanged=new g.Signal(this),this._ready=new i.PromiseDelegate;const r=null!==(t=e.workerUrl)&&void 0!==t?t:a.URLExt.join(a.PageConfig.getBaseUrl(),o),s=new URL(r,window.location.href),n=a.PageConfig.getOption("enableServiceWorkerCache")||"false";s.searchParams.set("enableCache",n),this._browsingContextId=i.UUID.uuid4(),this._contents=e.contents,this._broadcastChannel=new BroadcastChannel(c.DRIVE_API_PATH),this._broadcastChannel.addEventListener("message",this._onBroadcastMessage),this._driveContentsProcessor=new c.DriveContentsProcessor({contentsManager:this._contents}),this._initialize(s.href).catch(console.warn)}get registrationChanged(){return this._registrationChanged}get enabled(){return null!==this._registration}get browsingContextId(){return this._browsingContextId}get ready(){return this._ready.promise}async _initialize(e){const{serviceWorker:t}=navigator;let r=null;if(t){if(t.controller){const e=t.controller.scriptURL;await this._unregisterOldServiceWorkers(e),r=await t.getRegistration(e)||null,console.info("JupyterLite ServiceWorker was already registered")}if(!r&&t)try{console.info("Registering new JupyterLite ServiceWorker",e),r=await t.register(e),console.info("JupyterLite ServiceWorker was sucessfully registered")}catch(e){console.warn(e),console.warn(`JupyterLite ServiceWorker registration unexpectedly failed: ${e}`)}this._setRegistration(r),r?(this._ready.resolve(void 0),setTimeout(this._pingServiceWorker,2e4)):this._ready.reject(void 0)}else console.warn("ServiceWorkers not supported in this browser")}async _unregisterOldServiceWorkers(e){const t=`${e}-version`,r=localStorage.getItem(t);if(r&&r!==l||!r){console.info("New version, unregistering existing service workers.");const e=await navigator.serviceWorker.getRegistrations();await Promise.all(e.map((e=>e.unregister()))),console.info("All existing service workers have been unregistered.")}localStorage.setItem(t,l)}async _pingServiceWorker(){const e=await fetch("/api/service-worker-heartbeat");"ok"===await e.text()&&setTimeout(this._pingServiceWorker,2e4)}_setRegistration(e){this._registration=e,this._registrationChanged.emit(this._registration)}}}}]);
//# sourceMappingURL=9380.b2151d2.js.map